services:
  mongo:
    image: mongo:6
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db
    ports:
      - '27017:27017'

  backend:
    build:
      context: ./DroneRadarBackend/backend
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017/?authSource=admin
      - MONGO_DB=planesdb
      - PORT=8000
    ports:
      - '8000:8000'

  form:
    build:
      context: ./Form
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:8000
    ports:
      - '5000:5000'

  map_gui:
    build:
      context: ./Map_GUI
      dockerfile: backend/Dockerfile
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - '8080:8080'


  airplane_collector:
    build:
      context: ./AirplaneFeed/adsb-pipeline/collector
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:8000

  # ingest helper: runs ingest script in DroneRadarBackend/ingest (runs once)
  ingest:
    build:
      context: ./DroneRadarBackend/ingest
    restart: 'no'
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:8000
    volumes:
      - ./DroneRadarBackend/sample_json:/app/input_json

  # helper service to open an interactive mongosh connected to the mongo service
  mongo-client:
    image: mongo:6
    depends_on:
      - mongo
    entrypoint: ["mongosh", "mongodb://root:example@mongo:27017/?authSource=admin"]
    tty: true
    stdin_open: true

  # lightweight web-based MongoDB admin UI (for development only)
  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_URL: "mongodb://root:example@mongo:27017/?authSource=admin"
    ports:
      - '8081:8081'

volumes:
  mongo-data:
